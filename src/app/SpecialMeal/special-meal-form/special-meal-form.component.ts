import { CommonModule } from '@angular/common';
import { Component, EventEmitter, OnInit, Output } from '@angular/core';
import { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { SpecialMealCardComponent } from '../special-meal-card/special-meal-card.component';
import { Chef } from '../../models/chef';
import { SpecialMeal } from '../../models/special-meal';
import { SpecialMealService } from '../../services/special-meal.service';
import { AuthService } from '../../services/auth.service';
import { ActivatedRoute, Router } from '@angular/router';

@Component({
  selector: 'app-special-meal-form',
  standalone: true,
  imports: [
    ReactiveFormsModule,
    CommonModule,
  ],
  templateUrl: './special-meal-form.component.html',
  styleUrl: './special-meal-form.component.css'
})
// export class SpecialMealFormComponent implements OnInit {
//   clientId: string;
//   specialMealForm: FormGroup;
//   errorMessage: string = '';

//   @Output() formValueChanges = new EventEmitter<SpecialMeal>();

//   constructor(
//     private fb: FormBuilder,
//     private specialMealService: SpecialMealService,
//     private authService: AuthService,
//     public router: Router
//   ) {
//     this.clientId = this.authService.getClaims().UserId;
//     this.specialMealForm = this.fb.group({
//       name: ['', Validators.required],
//       desc: ['', Validators.required],
//       min: ['', Validators.required],
//       max: ['', Validators.required],
//     });
//   }

//   ngOnInit(): void {
//     this.specialMealForm.valueChanges.subscribe(value => {
//       const specialMeal = new SpecialMeal(
//         0, // Assuming id will be generated by backend
//         value.name,
//         value.desc,
//         value.min,
//         value.max,
//         null,
//         parseInt(this.clientId),
//         null,
//         null,
//         false,
//         false
//       );
//       this.formValueChanges.emit(specialMeal);
//     });
//   }

//   onSubmit(): void {
//     if (this.specialMealForm.invalid) {
//       return;
//     }

//     const specialMeal = new SpecialMeal(
//       0,
//       this.specialMealForm.value.name,
//       this.specialMealForm.value.desc,
//       this.specialMealForm.value.min,
//       this.specialMealForm.value.max,
//       null,
//       parseInt(this.clientId),
//       null,
//       null,
//       false,
//       false
//     );

//     this.specialMealService.addSpecialMeal(specialMeal).subscribe({
//       next: (meal) => {
//         console.log('Special meal created successfully:', meal);
//         this.router.navigateByUrl("/Special-Meal-Success");
//       },
//       error: (error) => {
//         console.error('Error creating special meal:', error);
//         this.errorMessage = 'There was an error creating your special meal. Please try again later.';
//       }
//     });
//   }
// }

export class SpecialMealFormComponent {
  specialMealForm: FormGroup;
  errorMessage: string = '';

  constructor(private fb: FormBuilder, private specialMealService: SpecialMealService) {
    this.specialMealForm = this.fb.group({
      s_MealName: ['', Validators.required],
      description: ['', Validators.required],
      minPrice: ['', [Validators.required, Validators.min(0)]],
      maxPrice: ['', [Validators.required, Validators.min(0)]],
      clientId: ['', Validators.required],
      chefId: [''],
      mealStatus: [''],
      isAccepted: [false],
      isTaken: [false]
    });
  }

  onSubmit() {
    // if (this.specialMealForm.valid) {
    //   const specialMeal: SpecialMeal = this.specialMealForm.value;

    // }
    const specialMeal: SpecialMeal = this.specialMealForm.value;
    this.specialMealService.addSpecialMeal(specialMeal).subscribe(
      (response) => {
        console.log('Special meal added successfully:', response);
      },
      (error) => {
        console.error('Error adding special meal:', error);
        this.errorMessage = 'There was an error creating your special meal. Please try again later.';
      }
    );
  }
}